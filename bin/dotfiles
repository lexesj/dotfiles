#!/usr/bin/env bash

set -euo pipefail

DOTFILES_DIR="$HOME/.dotfiles"

function detect_os() {
  if [[ -f /etc/os-release ]]; then
    source /etc/os-release
    echo "$ID"
  else
    echo "$(uname -s | tr '[:upper:]' '[:lower:]')"
  fi
}

function setup_ubuntu() {
  echo "Setting up Ubuntu..."
  if ! [[ -x "$(command -v git)" ]]; then
    echo "Installing git..."
    sudo apt install git
  fi

  if ! [[ -x "$(command -v ansible)" ]]; then
    echo "Installing ansible..."
    sudo apt update
    sudo apt install software-properties-common
    sudo add-apt-repository --yes --update ppa:ansible/ansible
    sudo apt install ansible -y
  fi
}

function setup_macos() {
  echo "Setting up MacOS..."
  if ! [[ -x "$(command -v brew)" ]]; then
    echo "Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  fi

  if ! [[ -x "$(command -v git)" ]]; then
    echo "Installing git..."
    brew install git
  fi

  if ! [[ -x "$(command -v ansible)" ]]; then
    echo "Installing ansible..."
    brew install ansible
  fi
}

function setup_ansible_galaxy() {
  echo "Setting up Ansible Galaxy roles..."
  ansible-galaxy install -r "$DOTFILES_DIR/requirements.yml"
}

os_name=$(detect_os)
echo "Detected OS: $os_name"
case "$os_name" in
ubuntu)
  setup_ubuntu
  ;;
darwin)
  setup_macos
  ;;
*)
  echo "Unsupported OS: $os_name"
  exit 1
  ;;
esac

if ! [[ -d "$DOTFILES_DIR" ]]; then
  echo "Cloning dotfiles repository..."
  git clone --quiet https://github.com/lexesj/dotfiles.git "$DOTFILES_DIR"
else
  echo "Updating dotfiles repository..."
  git -C "$DOTFILES_DIR" pull --quiet
fi

setup_ansible_galaxy
ansible-playbook "$DOTFILES_DIR/main.yml" "$@"
