---
- name: "Check for distribution config : {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: distribution_config
- name: "Run tasks : {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: distribution_config.stat.exists
- name: "Check Oh My Zsh installation status"
  ansible.builtin.stat:
    path: "{{ lookup('ansible.builtin.env', 'ZSH') }}"
  register: zsh
- name: "Install Oh My Zsh"
  ansible.builtin.shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  changed_when: not zsh.stat.exists
  when: not zsh.stat.exists
- name: "Install zsh-autosuggestions"
  ansible.builtin.git:
    repo: "https://github.com/zsh-users/zsh-autosuggestions"
    dest: "{{ lookup('ansible.builtin.env', 'ZSH_CUSTOM') or ansible_user_dir + '/.oh-my-zsh/custom' }}/plugins/zsh-autosuggestions"
    version: master
- name: "Link .zshrc"
  ansible.builtin.file:
    src: "{{ role_path }}/files/.zshrc"
    dest: "{{ ansible_user_dir }}/.zshrc"
    state: link
    force: true
- name: "Check for existing config"
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/.config/zsh"
  register: zsh_config
- name: "Remove existing config"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/zsh"
    state: absent
  when: not zsh_config.stat.islnk
- name: "Link config"
  ansible.builtin.file:
    src: "{{ role_path }}/files/zsh"
    dest: "{{ ansible_user_dir }}/.config/zsh"
    state: link
    force: true
